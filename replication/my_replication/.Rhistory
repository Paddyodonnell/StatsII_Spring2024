library(AER)
library(MASS)
library(AER)
library(pscl)
dat_timeseries_day_single <- read.csv("dat_timeseries_day_single.csv")
dat_timeseries_day_multi <- read.csv("dat_timeseries_day_multi.csv")
poisson_single_ongoing <- glm(
n_articles_day ~
n_articles_day_lag +
poly(electoral_cycle, 3) +
log_gdp_change_lag +
poll_change_to_election +
country_cycle,
data = filter(dat_timeseries_day_single,
class_inductive == "Ongoing"), family = "poisson")
summary(poisson_single_ongoing)
dispersiontest(poisson_single_ongoing)
poisson_single_broken <- update(
poisson_single_ongoing, . ~ .,
data = filter(dat_timeseries_day_single,
class_inductive == "Broken"))
summary(poisson_single_broken)
dispersiontest(poisson_single_broken)
poisson_single_fulfilled <- update(
poisson_single_ongoing, . ~ .,
data = filter(dat_timeseries_day_single,
class_inductive == "Fulfilled"))
dispersiontest(poisson_single_fulfilled)
poisson_multi_ongoing <- update(
poisson_single_ongoing, . ~ .,
data = filter(dat_timeseries_day_multi,
class_inductive == "Ongoing"))
dispersiontest(poisson_multi_ongoing)
poisson_multi_fulfilled <- update(
poisson_single_ongoing, . ~ .,
data = filter(dat_timeseries_day_multi,
class_inductive == "Fulfilled"))
dispersiontest(poisson_multi_fulfilled)
poisson_multi_broken <- update(
poisson_single_ongoing, . ~ .,
data = filter(dat_timeseries_day_multi,
class_inductive == "Broken"))
dispersiontest(poisson_multi_broken)
lrtest(poisson_single_ongoing, nb_single_ongoing)
# Set up the plotting area for a 2x2 layout
par(mfrow=c(2, 2), mar=c(2, 2, 2, 2))
# Plot 1: Poisson (Multi Ongoing)
poisson_resid_mo <- resid(poisson_multi_ongoing)
plot(fitted(poisson_multi_ongoing),
poisson_resid_mo, col = "blue", pch = 10,
xlab = "Number of articles", ylab = "Residuals",
main = "Poisson (Multi Ongoing)")
abline(0, 0)
# Plot 2: Negative Binomial (Multi Ongoing)
nb_resid_mo <- resid(nb_multi_ongoing)
plot(fitted(nb_multi_ongoing),
nb_resid_mo, col = "blue", pch = 10,
xlab = "Number of articles", ylab = "Residuals",
main = "Negative Binomial (Multi Ongoing)")
abline(0, 0)
poisson_resid_so <- resid(poisson_single_ongoing)
plot(fitted(poisson_single_ongoing),
poisson_resid_so, col = "blue", pch = 10,
xlab = "Number of articles", ylab = "Residuals",
main = "Poisson (Single Ongoing)")
abline(0, 0)
# Plot 4: Negative Binomial (Single Ongoing)
nb_resid_so <- resid(nb_single_ongoing)
plot(fitted(nb_single_ongoing),
nb_resid_so, col = "blue", pch = 10,
xlab = "Number of articles", ylab = "Residuals",
main = "Negative Binomial (Single Ongoing)")
abline(0, 0)
# Reset plotting layout to default
par(mfrow=c(1, 1), mar=c(5, 4, 4, 2) + 0.1)
zinb_single_ongoing <- zeroinfl(
n_articles_day ~
n_articles_day_lag +
poly(electoral_cycle, 3)+
log_gdp_change_lag +
poll_change_to_election +
country_cycle | 1,
data = filter(dat_timeseries_day_single,
class_inductive == "Ongoing"),
dist = "negbin")
AIC(nb_single_ongoing)
AIC(zinb_single_ongoing)
BIC(nb_single_ongoing)
BIC(zinb_single_ongoing)
zinb_single_fulfilled <-  zeroinfl(
n_articles_day ~
n_articles_day_lag +
poly(electoral_cycle, 3)+
log_gdp_change_lag +
poll_change_to_election +
country_cycle | 1,
data = filter(dat_timeseries_day_single,
class_inductive == "Fulfilled"),
dist = "negbin")
AIC(nb_single_fulfilled)
AIC(zinb_single_fulfilled)
BIC(nb_single_fulfilled)
BIC(zinb_single_fulfilled)
zinb_single_broken <- zeroinfl(
n_articles_day ~
n_articles_day_lag +
poly(electoral_cycle, 3)+
log_gdp_change_lag +
poll_change_to_election +
country_cycle | 1,
data = filter(dat_timeseries_day_single,
class_inductive == "Broken"),
dist = "negbin")
AIC(nb_single_broken)
AIC(zinb_single_broken)
BIC(nb_single_broken)
BIC(zinb_single_broken)
zinb_multi_ongoing <- zeroinfl(
n_articles_day ~
n_articles_day_lag +
poly(electoral_cycle, 3)+
log_gdp_change_lag +
poll_change_to_election +
country_cycle | 1,
data = filter(dat_timeseries_day_multi,
class_inductive == "Ongoing"),
dist = "negbin")
AIC(nb_multi_ongoing)
AIC(zinb_multi_ongoing)
BIC(nb_multi_ongoing)
BIC(zinb_multi_ongoing)
# Fit a Zero-Inflated Negative Binomial model
zinb_multi_fulfilled <- zeroinfl(
n_articles_day ~
n_articles_day_lag +
poly(electoral_cycle, 3)+
log_gdp_change_lag +
poll_change_to_election +
country_cycle | 1,
data = filter(dat_timeseries_day_multi,
class_inductive == "Fulfilled"),
dist = "negbin")
AIC(nb_multi_fulfilled)
AIC(zinb_multi_fulfilled)
BIC(nb_multi_fulfilled)
BIC(zinb_multi_fulfilled)
zinb_multi_broken <-  zeroinfl(
n_articles_day ~
n_articles_day_lag +
poly(electoral_cycle, 3)+
log_gdp_change_lag +
poll_change_to_election +
country_cycle | 1,
data = filter(dat_timeseries_day_multi,
class_inductive == "Broken"),
dist = "negbin")
AIC(nb_multi_broken)
AIC(zinb_multi_broken)
BIC(nb_multi_broken)
BIC(zinb_multi_broken)
lmtest::lrtest(nb_single_ongoing_np, nb_single_ongoing)
lrtest(nb_single_broken_np, nb_single_broken)
lrtest(nb_single_fulfilled_np, nb_single_fulfilled)
lrtest(nb_multi_ongoing_np, nb_multi_ongoing)
lrtest(nb_multi_broken_np, nb_multi_broken)
lrtest(nb_multi_fulfilled_np, nb_multi_fulfilled)
lmtest::lrtest(nb_single_ongoing_np, nb_single_ongoing)
lrtest(nb_single_broken_np, nb_single_broken)
lrtest(nb_single_fulfilled_np, nb_single_fulfilled)
lrtest(nb_multi_ongoing_np, nb_multi_ongoing)
lrtest(nb_multi_broken_np, nb_multi_broken)
lrtest(nb_multi_fulfilled_np, nb_multi_fulfilled)
